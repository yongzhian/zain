<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flwrobot.dao.CommunityManagementDao">

	<resultMap type="com.flwrobot.entity.CommunityManagement" id="CommunityManagement">
		<id column="id" property="id"/>
		
		<id column="username" property="username"/>
		<id column="password" property="password"/>
		
		<id column="community_logo_url" property="communityLogoUrl"/>
		<id column="community_name" property="communityName"/>
		<id column="alarm_phone" property="alarmPhone"/>
		
		<id column="is_valid" property="isValid"/>
		<id column="create_time" property="createTime"/>
		<id column="last_login_ip" property="lastLoginIp"/>
		<id column="last_login" property="lastLogin"/>
	</resultMap>
	
	<resultMap type="com.flwrobot.entity.CommunityBuiding" id="CommunityBuiding">
		<id column="id" property="id"/>
		<id column="management_id" property="managementId"/>
		<id column="buiding_no" property="buidingNo"/>
		<id column="remark" property="remark"/>
	</resultMap>
	
	<resultMap type="com.flwrobot.entity.CommunityRoom" id="communityRoom">
		<id column="id" property="id"/>
		<id column="buiding_id" property="buidingId"/>
		<id column="unit_no" property="unitNo"/>
		<id column="room_no" property="roomNo"/>
		<id column="owner_name" property="ownerName"/>
		<id column="owner_tel" property="ownerTel"/>
		<id column="remark" property="remark"/>
	</resultMap>
	
	<resultMap type="com.flwrobot.entity.Robot" id="robot">
		<id column="id" property="id"/>
		<id column="robot_type" property="robotType"/>
		<id column="robot_sn" property="robotSN"/>
		
		<id column="prod_model_id" property="prodModelId"/>
		
		<id column="activation_code" property="activationCode"/>
		<id column="password" property="password"/>
		<id column="production_date" property="productionDate"/>
		<id column="production_no" property="productionNo"/>
		<id column="activation_time" property="activationTime"/>
		
		<id column="activated" property="activated"/>
		<id column="robot_status" property="robotStatus"/>
		
		<id column="alarm_phone1" property="alarmPhone1"/>
		<id column="alarm_phone2" property="alarmPhone2"/>
		<id column="alarm_phone3" property="alarmPhone3"/>
		
		<id column="province" property="province"/>
		<id column="city" property="city"/>
		<id column="district" property="district"/>
		<id column="address" property="address"/>

		<id column="in_community" property="inCommunity"/>
		<id column="alarm_phone" property="alarmPhone"/>
		<id column="room_id" property="roomId"/>
		
		<id column="is_valid" property="isValid"/>
		
		<id column="version_branch_code" property="versionBranchCode"/>
		<id column="remark" property="remark"/>
		<id column="personality" property="personality"/>
		<id column="sw_version" property="swVersion"/>
		<id column="hw_version" property="hwVersion"/>
		<id column="fw_version" property="fwVersion"/>
	</resultMap>
	
	<resultMap type="com.flwrobot.entity.dto.RoomRobotInfo" id="roomRobotInfo">
		<id column="buiding_no" property="buildingNO"/>
		<id column="room_no" property="roomNO"/>
		<id column="robot_sn" property="robotSN"/>
	</resultMap>
	
	<insert id="insert" parameterType="com.flwrobot.entity.CommunityManagement">
		insert into
		community_management(username, password, community_name, create_time)
		values(#{username}, #{password}, #{communityName}, now())
	</insert>

	<select id="verifyUserName" parameterType="String" resultType="int">
		select count(t.id) ct from community_management t where t.is_valid =
		'T' and username = #{username}
	</select>
	
	<select id="login" resultMap="CommunityManagement">
		SELECT t.id, t.username, t.community_logo_url, t.community_name, t.alarm_phone, t.last_login, t.last_login_ip
		FROM community_management t
		WHERE t.is_valid = 'T' and t.username = #{username} and t.password = #{password}
	</select>
	
	<select id="getCommunityManagementInfo" resultMap="CommunityManagement" parameterType="long">
		select * from community_management t where t.id = #{managementId}
	</select>

	<select id="listBuiding" resultMap="CommunityBuiding">
		select * from community_buiding t where t.management_id = #{managementId} order by t.order_no asc
	</select>
	
	<select id="listRobot" resultType="map">
		select cm.community_name, cb.buiding_no, cr.unit_no, cr.room_no, r.room_id, r.robot_sn, r.robot_status, r.is_online
		from community_management cm, community_buiding cb, community_room cr, robot r
		where r.room_id = cr.id and cr.buiding_id = cb.id and cb.management_id = cm.id
		and cm.id = #{managementId}
		<if test="buidingId > 0">and cb.id = #{buidingId}</if>
		order by cb.order_no asc, cr.id asc
	</select>
	
	<insert id="insertRoomAlarm" parameterType="com.flwrobot.entity.CommunityRoomAlarm">
		insert into
		community_room_alarm(room_id, robot_id, alarm_time, alarm_name, alarm_msg, alarm_type, handle_result)
		values(#{roomId}, #{robotId}, now(), #{alarmName}, #{alarmMsg}, #{alarmType}, 'UNHANDLED')
	</insert>
	
	<update id="handleRoomAlarm" parameterType="com.flwrobot.entity.CommunityRoomAlarm">
		update community_room_alarm t
		set t.handle_people = #{handlePeople}, t.handle_time = now(),
		t.handle_result = #{handleResult}, t.handle_remark = #{handleRemark}
		where t.id = #{id}
	</update>

	<select id="listHistory" resultType="map">
		select cb.buiding_no, cr.id room_id, cr.room_no, cra.id, cra.robot_id, r.robot_sn, cra.alarm_time, cra.alarm_name, cra.alarm_msg, cra.alarm_type, cra.handle_result
		from community_room_alarm cra, community_room cr, community_buiding cb, community_management cm, robot r
		where cra.room_id = cr.id
		and cra.robot_id = r.id
		and cr.buiding_id = cb.id
		and cb.management_id = cm.id
		and cm.id = #{managementId}
		<if test="buidingId > 0">and cb.id = #{buidingId}</if>
		<if test="roomId > 0">and cr.id = #{roomId}</if>
		
		<choose>
			<when test="orderBy == 'roomNo'">order by cr.room_no asc</when>
			<when test="orderBy == 'alarmTime'">order by cra.alarm_time desc</when>
			<when test="orderBy == 'alarmName'">order by cra.alarm_name asc</when>
			<when test="orderBy == 'alarmMsg'">order by cra.alarm_msg asc</when>
			<when test="orderBy == 'handleResult'">order by cra.handle_result desc</when>
			<otherwise>order by cra.id desc</otherwise>
		</choose>
	</select>
	
	<select id="countUnhandledAlarm" resultType="int">
		select count(1) ct from community_room_alarm cra, community_room cr, community_buiding cb, community_management cm
		where cra.room_id = cr.id
		and cr.buiding_id = cb.id
		and cb.management_id = cm.id
		and cra.handle_result = 'UNHANDLED'
		and cm.id = #{managementId}
		<if test="buidingId > 0">and cb.id = #{buidingId}</if>
		<if test="alarmTypes4In != null and alarmTypes4In !=''">and cra.alarm_type in (${alarmTypes4In})</if>
	</select>

	<select id="getRoomUnhandledAlarmCount" resultType="map">
		select cra.room_id, count(1) ct from community_room_alarm cra, community_room cr, community_buiding cb, community_management cm
		where cra.room_id = cr.id
		and cr.buiding_id = cb.id
		and cb.management_id = cm.id
		and cra.handle_result = 'UNHANDLED'
		and cm.id = #{managementId}
		<if test="buidingId > 0">and cb.id = #{buidingId}</if>
		<if test="alarmTypes4In != null and alarmTypes4In !=''">and cra.alarm_type in (${alarmTypes4In})</if>
		group by cra.room_id
	</select>

	<select id="getRoomAlarmInfo" resultType="map">
		select cb.id buiding_id, cb.buiding_no, cr.id room_id, cr.room_no, cra.id, cra.alarm_time, cra.alarm_name, cra.alarm_msg, cra.alarm_type, cra.handle_result
		from community_room_alarm cra, community_room cr, community_buiding cb, community_management cm
		where cra.room_id = cr.id
		and cr.buiding_id = cb.id
		and cb.management_id = cm.id
		and cra.id = ${ roomAlarmId }
	</select>
	
	<update id="setPassword">
		update community_management t set t.password = #{newPass} where t.id = #{id}
	</update>
	
	<select id="getCommunityRoomListByCondition" resultMap="communityRoom"> 
		SELECT cr.*
		FROM community_room cr, community_buiding cb
		<trim prefix="WHERE" prefixOverrides="AND">
			cr.buiding_id = cb.id  
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
		<if test="conditionMap.containsKey('orderBy')">
            ORDER BY  cr.id ${conditionMap.orderBy}
        </if>
	</select>
	
	<select id="getCommunityRoomListCountByCondition" resultType="int"> 
		SELECT count(1)
		FROM community_room cr, community_buiding cb
		<trim prefix="WHERE" prefixOverrides="AND">
			cr.buiding_id = cb.id  
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
	</select>
	
	<select id="getRobotListByCondition" resultMap="robot"> 
		SELECT r.*
		FROM community_buiding cb, community_room cr, robot r
		<trim prefix="WHERE" prefixOverrides="AND">
		    r.room_id = cr.id AND cr.buiding_id = cb.id AND r.is_valid='T' 
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
	</select>
	
	<select id="getRobotListCountByCondition" resultType="int"> 
		SELECT count(1)
		FROM community_buiding cb, community_room cr, robot r
		<trim prefix="WHERE" prefixOverrides="AND">
		    r.room_id = cr.id AND cr.buiding_id = cb.id
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
	</select>
	
	<select id="getRoomRobotInfoListByCondition" resultMap="roomRobotInfo"> 
		SELECT cr.room_no,r.robot_sn,cb.buiding_no
		FROM community_buiding cb, community_room cr
		LEFT JOIN robot r ON r.room_id = cr.id AND r.is_valid='T'
		<trim prefix="WHERE" prefixOverrides="AND">
		    cr.buiding_id = cb.id 
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
		<if test="conditionMap.containsKey('orderBy')">
            ORDER BY  cb.order_no ${conditionMap.orderBy} ,cr.order_no ${conditionMap.orderBy},cr.id ${conditionMap.orderBy}
       </if>
       <if  test="conditionMap.containsKey('beginItem') and conditionMap.containsKey('endItem') ">
            LIMIT ${conditionMap.beginItem},${conditionMap.endItem}
       </if>
	</select>
	
	<select id="getRoomRobotInfoListCountByCondition" resultType="long"> 
		SELECT count(1)
		FROM community_buiding cb, community_room cr
		LEFT JOIN robot r ON r.room_id = cr.id AND r.is_valid='T'
		<trim prefix="WHERE" prefixOverrides="AND">
		    cr.buiding_id = cb.id
			<if test="conditionMap.containsKey('buidingId')">
				AND cr.buiding_id = #{conditionMap.buidingId}
			</if>
			<if test="conditionMap.containsKey('communityManagementId')">
				AND cb.management_id=#{conditionMap.communityManagementId}
			</if>
		</trim>
	</select>
	
</mapper>